settings {
   parser-class:     CalcParser;
   lexer-class:      CalcLexer;
   parser-package:   ch.eskaton.yajpg.example.parser;
}

token {
   NUMBER: "([0-9]+)|([0-9]+.)|([0-9]*.[0-9]+)",
   PLUS: "[+]",
   MINUS: "-",
   TIMES: "[*]",
   DIV: "/"
}

precedence {
   leftassoc: MINUS, PLUS;
   leftassoc: TIMES, DIV;
}

rules {
   expr[CalcNode]:
         term EOF {
            $$ = $1;
         };

   term[CalcNode]:
         term TIMES term {
               $$ = new CalcNode($1, CalcToken.TIMES, $3);
            }
         | term DIV term {
               $$ = new CalcNode($1, CalcToken.DIV, $3);
            }
         | term PLUS term {
               $$ = new CalcNode($1, CalcToken.PLUS, $3);
            }
         | term MINUS term {
               $$ = new CalcNode($1, CalcToken.MINUS, $3);
            }
         |  NUMBER {
               $$ = new CalcValue($1);
            };
}

accept {
   expr   
}
